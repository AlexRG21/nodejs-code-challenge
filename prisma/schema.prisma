// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id       Int        @id @default(autoincrement())
  user_name     String     @unique
  user_password String
  user_lastname String
  user_email    String
  pokemons      Pokemon[]
  favorites     Favorite[]
}

model Pokemon {
  pokemon_id    Int             @id @default(autoincrement())
  pokemon_name  String          @unique
  type_id       Int
  user_id       Int
  user          User            @relation(fields: [user_id], references: [user_id])
  Favorite      Favorite[]
  typeByPokemon TypeByPokemon[]
}

model Favorite {
  favorites_id Int     @id @default(autoincrement())
  pokemon_id   Int
  user_id      Int
  user         User    @relation(fields: [user_id], references: [user_id])
  pokemon      Pokemon @relation(fields: [pokemon_id], references: [pokemon_id])
}

model Type {
  type_id       Int             @id @default(autoincrement())
  type_name     String
  typeByPokemon TypeByPokemon[]
}

model TypeByPokemon {
  typeByPokemon_id Int     @id @default(autoincrement())
  type_id          Int
  pokemon_id       Int
  pokemon          Pokemon @relation(fields: [pokemon_id], references: [pokemon_id])
  type             Type    @relation(fields: [type_id], references: [type_id])
}
